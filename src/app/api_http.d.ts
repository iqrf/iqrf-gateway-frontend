/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CloudsAzureRequest100 {
  connectionString: string;
  [k: string]: any;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CloudsHexioRequest100 {
  broker: string;
  clientId: string;
  topicRequests: string;
  topicResponses: string;
  username: string;
  password: string;
  [k: string]: any;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CloudsIbmCloudRequest100 {
  organizationId: string;
  deviceType: string;
  token: string;
  eventId: string;
  [k: string]: any;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CloudsInteliGlueRequest100 {
  rootTopic: string;
  assignedPort: number;
  clientId: string;
  password: string;
  [k: string]: any;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ConfigResponse100 {
  applicationName: string;
  resourceDir: string;
  dataDir: string;
  cacheDir: string;
  userDir: string;
  configurationDir: string;
  deploymentDir: string;
  components: {
    name: string;
    libraryPath: string;
    libraryName: string;
    enabled: boolean;
    startlevel: number;
    [k: string]: any;
  }[];
  [k: string]: any;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ConfigComponentRequest100 {
  component: string;
  [k: string]: any;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ConfigComponentResponse100 {
  configuration: {
    name: string;
    libraryPath: string;
    libraryName: string;
    enabled: boolean;
    startlevel: number;
    [k: string]: any;
  };
  instances:
    | {
        id: number;
        component: string;
        instance: string;
        IqrfInterface: string;
        powerEnableGpioPin: number;
        busEnableGpioPin: number;
        pgmSwitchGpioPin: number;
        spiReset: boolean;
        [k: string]: any;
      }
    | {
        id: number;
        component: string;
        instance: string;
        [k: string]: any;
      }
    | {
        id: number;
        component: string;
        instance: string;
        IqrfInterface: string;
        [k: string]: any;
      }
    | {
        id: number;
        component: string;
        instance: string;
        IqrfInterface: string;
        baudRate: number;
        powerEnableGpioPin: number;
        busEnableGpioPin: number;
        [k: string]: any;
      }
    | {
        id: number;
        component: string;
        instance: string;
        DpaHandlerTimeout: number;
        [k: string]: any;
      }
    | {
        id: number;
        component: string;
        instance: string;
        enumAtStartUp: boolean;
        enumPeriod: number;
        enumUniformDpaVer: boolean;
        [k: string]: any;
      }
    | {
        id: number;
        component: string;
        instance: string;
        BrokerAddr: string;
        ClientId: string;
        Persistence: number;
        Qos: number;
        TopicRequest: string;
        TopicResponse: string;
        User: string;
        Password: string;
        EnabledSSL: boolean;
        KeepAliveInterval: number;
        ConnectTimeout: number;
        MinReconnect: number;
        MaxReconnect: number;
        TrustStore: string;
        KeyStore: string;
        PrivateKey: string;
        PrivateKeyPassword: string;
        EnabledCipherSuites: string;
        EnableServerCertAuth: boolean;
        acceptAsyncMsg: boolean;
        [k: string]: any;
      }
    | {
        id: number;
        component: string;
        instance: string;
        acceptAsyncMsg: boolean;
        RequiredInterfaces: {
          name: string;
          target: {
            instance: string;
            [k: string]: any;
          };
          [k: string]: any;
        }[];
        [k: string]: any;
      }
    | {
        id: number;
        component: string;
        instance: string;
        RemotePort: number;
        LocalPort: number;
        [k: string]: any;
      }
    | {
        id: number;
        component: string;
        instance: string;
        path: string;
        filename: string;
        maxSizeMB: number;
        timestampFiles: boolean;
        VerbosityLevels: {
          channel: number;
          level: string;
          [k: string]: any;
        }[];
        [k: string]: any;
      }
    | {
        id: number;
        component: string;
        instance: string;
        metaDataToMessages: boolean;
        [k: string]: any;
      }
    | {
        id: number;
        component: string;
        instance: string;
        LocalMqName: string;
        RemoteMqName: string;
        acceptAsyncMsg: boolean;
        [k: string]: any;
      };
  [k: string]: any;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GatewayInfoResponse100 {
  board: string;
  gwId: string;
  pixla: string;
  versions: {
    controller: string;
    daemon: string;
    webapp: string;
    [k: string]: any;
  };
  hostname: string;
  interfaces: {
    name: string;
    macAddress: string;
    ipAddresses: string[];
    [k: string]: any;
  }[];
  diskUsages: {
    fsName: string;
    fsType: string;
    size: string;
    used: string;
    available: string;
    usage: string;
    mount: string;
    [k: string]: any;
  }[];
  memoryUsage: {
    size: string;
    used: string;
    free: string;
    shared: string;
    buffers: string;
    cache: string;
    available: string;
    usage: string;
    [k: string]: any;
  };
  swapUsage: {
    size: string;
    used: string;
    free: string;
    usage: string;
    [k: string]: any;
  };
  coordinator: any;
  [k: string]: any;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface SignInRequest100 {
  /**
   * user name
   */
  username: string;
  /**
   * password
   */
  password: string;
  [k: string]: any;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface SignInResponse100 {
  /**
   * user name
   */
  token: string;
  [k: string]: any;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VersionResponse100 {
  version: string;
  commit: string;
  pipeline: string;
  [k: string]: any;
}
